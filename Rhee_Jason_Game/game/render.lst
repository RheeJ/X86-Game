Microsoft (R) Macro Assembler Version 6.14.8444		    03/12/15 22:49:56
render.asm						     Page 1 - 1


				; #########################################################################
				;
				;   render.asm - Assembly file for EECS205 Assignment 4/5
				;
				;
				; #########################################################################

				      .586
				      .MODEL FLAT,STDCALL
				      .STACK 4096
				      option casemap :none  ; case sensitive

				    include stars.inc		
			      C ; #########################################################################
			      C ;
			      C ;   stars.inc - Includes for EECS205 Assignment 1
			      C ;
			      C ;
			      C ; #########################################################################
			      C 
			      C 
			      C DrawStarReg PROTO STDCALL ; Renders a star in the 2D drawing space
			      C                         ; Uses register passed parameters:
			      C                         ;      esi = x-coordinate
			      C                         ;      edi = y-coordinate
			      C 
			      C DrawAllStars PROTO STDCALL ; Routine which uses DrawStarReg to create all the stars
			      C 
			      C EXTERNDEF STDCALL WinMain : NEAR
			      C 
				    include blit.inc
			      C ; #########################################################################
			      C ;
			      C ;   blit.inc - Includes for EECS205 Assignment 2
			      C ;
			      C ;
			      C ; #########################################################################
			      C 
			      C 
 00000010		      C _EECS205BITMAP STRUCT
 00000000  00000000	      C  dwWidth      DWORD  ?
 00000004  00000000	      C  dwHeight     DWORD  ?
 00000008  00		      C  bTransparent BYTE   ?
 00000009  00000003 [	      C               BYTE   3 DUP(?)
	    00
	   ]
 0000000C  00000000	      C  lpBytes      DWORD  ?
			      C _EECS205BITMAP ENDS
			      C 
			      C EECS205BITMAP TYPEDEF _EECS205BITMAP
			      C 
			      C EXTERNDEF StarBitmap:EECS205BITMAP
			      C EXTERNDEF dwPitch:DWORD
			      C EXTERNDEF lpDisplayBits:DWORD
			      C 
			      C 
			      C BlitReg PROTO STDCALL   ; Renders a bitmap to the 2D drawing space
			      C                         ; Uses register passed parameters:
			      C                         ;      esi = x-coordinate (of image center)
			      C                         ;      edi = y-coordinate (of image center)
			      C 			;      edx = pointer to the bitmap to draw
			      C 
			      C 
			      C 
				    include rotate.inc	
			      C ; #########################################################################
			      C ;
			      C ;   rotate.inc - Includes for EECS205 Assignment 3
			      C ;
			      C ;
			      C ; #########################################################################
			      C 
			      C include blit.inc
			      C ; #########################################################################
			      C ;
			      C ;   blit.inc - Includes for EECS205 Assignment 2
			      C ;
			      C ;
			      C ; #########################################################################
			      C 
			      C 
			      C _EECS205BITMAP STRUCT
			      C  dwWidth      DWORD  ?
			      C  dwHeight     DWORD  ?
			      C  bTransparent BYTE   ?
			      C               BYTE   3 DUP(?)
			      C  lpBytes      DWORD  ?
			      C _EECS205BITMAP ENDS
			      C 
			      C EECS205BITMAP TYPEDEF _EECS205BITMAP
			      C 
			      C EXTERNDEF StarBitmap:EECS205BITMAP
			      C EXTERNDEF dwPitch:DWORD
			      C EXTERNDEF lpDisplayBits:DWORD
			      C 
			      C 
			      C BlitReg PROTO STDCALL   ; Renders a bitmap to the 2D drawing space
			      C                         ; Uses register passed parameters:
			      C                         ;      esi = x-coordinate (of image center)
			      C                         ;      edi = y-coordinate (of image center)
			      C 			;      edx = pointer to the bitmap to draw
			      C 
			      C 
			      C 
			      C 
			      C BasicBlit PROTO STDCALL lpBmp:PTR EECS205BITMAP, xcenter:DWORD, ycenter:DWORD
			      C 
			      C RotateBlit PROTO STDCALL lpBmp:PTR EECS205BITMAP, xcenter:DWORD, ycenter:DWORD, angle:DWORD
			      C 
			      C 
			      C 
				    include game.inc
			      C ; #########################################################################
			      C ;
			      C ;   game.inc - Includes for EECS205 Assignment 4/5
			      C ;
			      C ;
			      C ; #########################################################################
			      C 
			      C ;; These are library routines that you will call (but do NOT have to implement)
			      C BeginDraw PROTO
			      C EndDraw PROTO
			      C 
			      C ;; You should not need to modify these prototypes (actually, it would probably be bad)
			      C GameInit PROTO
			      C GameMain PROTO mouseStatus:DWORD, keyDown:DWORD, keyUp:DWORD
			      C 
			      C ;; Useful Library Routines
			      C DrawString PROTO x:DWORD, y:DWORD, string:PTR BYTE 
			      C DrawInt PROTO x:DWORD, y:DWORD, value:DWORD
			      C 
			      C ;; Feel free to modify the following
			      C GameRender PROTO 
			      C GameLogic PROTO xinc : DWORD, yinc : DWORD, angleinc : DWORD, arotationinc : DWORD, projY : DWORD, projX : DWORD
			      C GameExplosion PROTO lpBitmap : PTR EECS205BITMAP
			      C ProjExplosion PROTO lpBitmap : PTR EECS205BITMAP, xC : DWORD, yC : DWORD
			      C GameProj PROTO
			      C 
			      C EXTERNDEF lpTyroneBmp : DWORD
			      C EXTERNDEF xCenter : DWORD
			      C EXTERNDEF yCenter : DWORD
			      C EXTERNDEF angle : DWORD
			      C EXTERNDEF arotation : DWORD
			      C EXTERNDEF amovement : DWORD
			      C EXTERNDEF amovementy : DWORD
			      C EXTERNDEF amovement2 : DWORD
			      C EXTERNDEF amovement2y : DWORD
			      C EXTERNDEF pCenter : DWORD
			      C EXTERNDEF pCenterx : DWORD
			      C EXTERNDEF Explode : BYTE
			      C EXTERNDEF pExplode0 : BYTE
			      C EXTERNDEF pExplode1 : BYTE
			      C EXTERNDEF pExplode2 : BYTE
			      C EXTERNDEF anglestep : DWORD
			      C EXTERNDEF spacepressed : BYTE
			      C EXTERNDEF fighter_000:EECS205BITMAP
			      C EXTERNDEF asteroid_000:EECS205BITMAP
			      C EXTERNDEF asteroid_001:EECS205BITMAP
			      C EXTERNDEF asteroid_002:EECS205BITMAP
			      C EXTERNDEF asteroid_003:EECS205BITMAP
			      C EXTERNDEF nuke_001:EECS205BITMAP
			      C EXTERNDEF nuke_002:EECS205BITMAP
			      C EXTERNDEF nuke_003:EECS205BITMAP
			      C 
					
 00000000			.DATA
 00000000 00000000		count DWORD 0
 00000004 00000000		pcount DWORD 0

 00000000			.CODE
 00000000				GameRender PROC STDCALL
						INVOKE BeginDraw
 00000005  BE 00000000 E			mov esi, OFFSET fighter_000
						INVOKE RotateBlit, esi, xCenter, yCenter, angle
 00000022  80 3D 00000000 E			cmp pExplode0, 1
	   01
 00000029  74 1E				je P1
 0000002B  BE 00000000 E			mov esi, OFFSET asteroid_000
						INVOKE BasicBlit, esi, 200, 200
 00000040  80 3D 00000000 E			cmp pExplode1, 1
	   01
 00000047  74 26				je P2
 00000049				P1:
 00000049  BE 00000000 E			mov esi, OFFSET asteroid_001
						INVOKE RotateBlit, esi, amovement2, amovement2y, arotation
 00000066  80 3D 00000000 E			cmp pExplode2, 1
	   01
 0000006D  74 1D				je P3
 0000006F				P2:
 0000006F  BE 00000000 E			mov esi, OFFSET asteroid_003
						INVOKE RotateBlit, esi, amovement, amovementy, arotation
 0000008C				P3:
 0000008C  BE 00000000 E			mov esi, OFFSET asteroid_002
						INVOKE BasicBlit, esi, pCenterx, pCenter
						INVOKE EndDraw
 000000A8  C3					ret
 000000A9				GameRender ENDP
					
 000000A9				ProjExplosion PROC STDCALL lpBitmap:PTR EECS205BITMAP, xC:DWORD, yC:DWORD
						INVOKE BeginDraw
 000000B1  8B 75 08				mov esi, [lpBitmap]
 000000B4  8B 3E				mov edi, (EECS205BITMAP PTR [esi]).dwWidth
 000000B6  C7 05 00000000 R			mov count, 0
	   00000000
 000000C0				T2:
 000000C0  39 3D 00000000 R			cmp count, edi
 000000C6  7C 02				jl L2
 000000C8  EB 0C				jmp P2
 000000CA				L2:
 000000CA  C6 06 FF				mov (BYTE PTR [esi]), 0ffh
 000000CD  46					inc esi
 000000CE  FF 05 00000000 R			inc count
 000000D4  EB EA				jmp T2
 000000D6				P2:
 000000D6  BE 00000000 E			mov esi, OFFSET nuke_001
				 		INVOKE BasicBlit, esi, xC, yC
 000000E7  BE 00000000 E			mov esi, OFFSET nuke_002
						INVOKE BasicBlit, esi, xC, yC
 000000F8  BE 00000000 E			mov esi, OFFSET nuke_003
						INVOKE BasicBlit, esi, xC, yC
						INVOKE EndDraw
						ret
 00000112				ProjExplosion ENDP
						
 00000112				GameExplosion PROC STDCALL lpBitmap:PTR EECS205BITMAP
						INVOKE BeginDraw
 0000011A  BE 00000000 E			mov esi, OFFSET fighter_000
 0000011F  8B 3E				mov edi, (EECS205BITMAP PTR [esi]).dwWidth
 00000121				T1:
 00000121  39 3D 00000000 R			cmp count, edi
 00000127  7C 02				jl L1
 00000129  EB 0C				jmp P1
 0000012B				L1:
 0000012B  C6 06 FF				mov (BYTE PTR [esi]), 0ffh
 0000012E  46					inc esi
 0000012F  FF 05 00000000 R			inc count
 00000135  EB EA				jmp T1
 00000137				P1:
 00000137  8B 75 08				mov esi, [lpBitmap]
 0000013A  8B 3E				mov edi, (EECS205BITMAP PTR [esi]).dwWidth
 0000013C  C7 05 00000000 R			mov count, 0
	   00000000
 00000146				T2:
 00000146  39 3D 00000000 R			cmp count, edi
 0000014C  7C 02				jl L2
 0000014E  EB 0C				jmp P2
 00000150				L2:
 00000150  C6 06 FF				mov (BYTE PTR [esi]), 0ffh
 00000153  46					inc esi
 00000154  FF 05 00000000 R			inc count
 0000015A  EB EA				jmp T2
 0000015C				P2:
 0000015C  BE 00000000 E			mov esi, OFFSET nuke_001
						INVOKE BasicBlit, esi, xCenter, yCenter
 00000173  BE 00000000 E			mov esi, OFFSET nuke_002
						INVOKE BasicBlit, esi, xCenter, yCenter
 0000018A  BE 00000000 E			mov esi, OFFSET nuke_003
						INVOKE BasicBlit, esi, xCenter, yCenter
						INVOKE EndDraw
 000001A6  C6 05 00000000 E			mov Explode, 1
	   01
						ret
 000001B1				GameExplosion ENDP

				;; Define the function GameRender
				;; Since we have thoroughly covered defining functions in class, its up to you from here on out...
					
				END
Microsoft (R) Macro Assembler Version 6.14.8444		    03/12/15 22:49:56
render.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

_EECS205BITMAP . . . . . . . . .	 00000010
  dwWidth  . . . . . . . . . . .	 00000000	 DWord
  dwHeight . . . . . . . . . . .	 00000004	 DWord
  bTransparent . . . . . . . . .	 00000008	 Byte
  lpBytes  . . . . . . . . . . .	 0000000C	 DWord


Types:

                N a m e                  Size     Attr

EECS205BITMAP  . . . . . . . . .	 00000010     _EECS205BITMAP 


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000008 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001B1 Para	  Public  'CODE'	


Procedures,  parameters and locals:

                N a m e                 Type     Value    Attr

BasicBlit  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
BeginDraw  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
BlitReg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawAllStars . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawStarReg  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
EndDraw  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GameExplosion  . . . . . . . . .	P Near	 00000112 _TEXT	Length= 0000009F Public STDCALL
  lpBitmap . . . . . . . . . . .	DWord	 bp + 00000008
  T1 . . . . . . . . . . . . . .	L Near	 00000121 _TEXT	
  L1 . . . . . . . . . . . . . .	L Near	 0000012B _TEXT	
  P1 . . . . . . . . . . . . . .	L Near	 00000137 _TEXT	
  T2 . . . . . . . . . . . . . .	L Near	 00000146 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 00000150 _TEXT	
  P2 . . . . . . . . . . . . . .	L Near	 0000015C _TEXT	
GameInit . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GameLogic  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GameMain . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GameProj . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GameRender . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000000A9 Public STDCALL
  P1 . . . . . . . . . . . . . .	L Near	 00000049 _TEXT	
  P2 . . . . . . . . . . . . . .	L Near	 0000006F _TEXT	
  P3 . . . . . . . . . . . . . .	L Near	 0000008C _TEXT	
ProjExplosion  . . . . . . . . .	P Near	 000000A9 _TEXT	Length= 00000069 Public STDCALL
  lpBitmap . . . . . . . . . . .	DWord	 bp + 00000008
  xC . . . . . . . . . . . . . .	DWord	 bp + 0000000C
  yC . . . . . . . . . . . . . .	DWord	 bp + 00000010
  T2 . . . . . . . . . . . . . .	L Near	 000000C0 _TEXT	
  L2 . . . . . . . . . . . . . .	L Near	 000000CA _TEXT	
  P2 . . . . . . . . . . . . . .	L Near	 000000D6 _TEXT	
RotateBlit . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
Explode  . . . . . . . . . . . .	Byte	 00000000 FLAT	External STDCALL
StarBitmap . . . . . . . . . . .	_EECS205BITMAP  00000000 FLAT	External STDCALL
WinMain  . . . . . . . . . . . .	L Near	 00000000 FLAT	External STDCALL
amovement2y  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
amovement2 . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
amovementy . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
amovement  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
anglestep  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
angle  . . . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
arotation  . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
asteroid_000 . . . . . . . . . .	_EECS205BITMAP  00000000 FLAT	External STDCALL
asteroid_001 . . . . . . . . . .	_EECS205BITMAP  00000000 FLAT	External STDCALL
asteroid_002 . . . . . . . . . .	_EECS205BITMAP  00000000 FLAT	External STDCALL
asteroid_003 . . . . . . . . . .	_EECS205BITMAP  00000000 FLAT	External STDCALL
count  . . . . . . . . . . . . .	DWord	 00000000 _DATA	
dwPitch  . . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
fighter_000  . . . . . . . . . .	_EECS205BITMAP  00000000 FLAT	External STDCALL
lpDisplayBits  . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
lpTyroneBmp  . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
nuke_001 . . . . . . . . . . . .	_EECS205BITMAP  00000000 FLAT	External STDCALL
nuke_002 . . . . . . . . . . . .	_EECS205BITMAP  00000000 FLAT	External STDCALL
nuke_003 . . . . . . . . . . . .	_EECS205BITMAP  00000000 FLAT	External STDCALL
pCenterx . . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
pCenter  . . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
pExplode0  . . . . . . . . . . .	Byte	 00000000 FLAT	External STDCALL
pExplode1  . . . . . . . . . . .	Byte	 00000000 FLAT	External STDCALL
pExplode2  . . . . . . . . . . .	Byte	 00000000 FLAT	External STDCALL
pcount . . . . . . . . . . . . .	DWord	 00000004 _DATA	
spacepressed . . . . . . . . . .	Byte	 00000000 FLAT	External STDCALL
xCenter  . . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL
yCenter  . . . . . . . . . . . .	DWord	 00000000 FLAT	External STDCALL

	   0 Warnings
	   0 Errors
